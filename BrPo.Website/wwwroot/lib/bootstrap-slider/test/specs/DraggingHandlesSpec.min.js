/**
 * Minified by jsDelivr using Terser v5.3.0.
 * Original file: /npm/bootstrap-slider@11.0.2/test/specs/DraggingHandlesSpec.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("Dragging handles tests",(function(){var e,t,o;function n(e,o){var n=document.createEvent("MouseEvents");return t[0]=e,t[7]=o,n.initMouseEvent.apply(n,t),n}beforeEach((function(){e=new Slider(document.getElementById("testSlider1"),{ticks:[0,1,2,3,4,5,6],value:[4,5],step:1,range:!0}),t=["mousemove",!0,!0,document,0,0,0,void 0,e.sliderElem.offsetTop,!1,!1,!1,!1,0,null],o=e.ticks.map((function(t){return t.offsetLeft+e.sliderElem.offsetLeft}))})),afterEach((function(){e&&(e instanceof Slider&&e.destroy(),e=null)})),describe("Dragging handles over each other",(function(){it("should swap reliably given imprecision",(function(){var n=document.createEvent("MouseEvents");t[7]=o[4],n.initMouseEvent.apply(n,t);var u=document.createEvent("MouseEvents");t[7]=o[5],u.initMouseEvent.apply(u,t);var a=document.createEvent("MouseEvents");t[7]=o[6],a.initMouseEvent.apply(a,t);var s=document.createEvent("MouseEvents");t[7]=e.ticks[4].offsetLeft+e.sliderElem.offsetLeft,s.initMouseEvent.apply(s,t),e.mousedown(n),expect(e._state.dragged).toBe(0),expect(e.getValue()).toEqual([4,5]),e.mousemove(u),expect(e._state.dragged).toBe(0),expect(e.getValue()).toEqual([5,5]),e.mousemove(a),expect(e._state.dragged).toBe(1),expect(e.getValue()).toEqual([5,6]),e.mousemove(u),expect(e._state.dragged).toBe(1),expect(e.getValue()).toEqual([5,5]),e.mousemove(u),e.mousedown(n),expect(e._state.dragged).toBe(0),expect(e.getValue()).toEqual([4,5]),e.mousemove(n),expect(e._state.dragged).toBe(0),expect(e.getValue()).toEqual([4,5]),e.mouseup(s),expect(e._state.dragged).toBeNull(),expect(e.getValue()).toEqual([4,5])}))})),describe("Drag handles over each other and use keyboard to move handles over each other",(function(){var n;function u(e,n){var u=document.createEvent("MouseEvent");return t[0]=e,t[7]=o[n],u.initMouseEvent.apply(u,t),u}beforeEach((function(){(n=document.createEvent("Event")).initEvent("keydown",!0,!0)})),afterEach((function(){n=null})),it("should drag and keydown handles properly to the right then back to the left",(function(){e.mousedown(u("mousedown",4)),expect(e._state.dragged).toBe(0),expect(e.getValue()).toEqual([4,5]),e.mousemove(u("mousemove",5)),expect(e._state.dragged).toBe(0),expect(e.getValue()).toEqual([5,5]),e.mousemove(u("mousemove",6)),expect(e._state.dragged).toBe(1),expect(e.getValue()).toEqual([5,6]),e.mouseup(u("mouseup",6)),expect(e._state.dragged).toBeNull(),expect(e.getValue()).toEqual([5,6]),n.keyCode=n.which=37,e.handle2Keydown(n),expect(e._state.keyCtrl).toBeUndefined(),expect(e.getValue()).toEqual([5,5]),e.handle2Keydown(n),expect(e._state.keyCtrl).toBeUndefined(),expect(e.getValue()).toEqual([4,5])})),it("should drag and keydown handles properly to the left then back to the right",(function(){e.mousedown(u("mousedown",5)),expect(e._state.dragged).toBe(1),expect(e.getValue()).toEqual([4,5]),e.mousemove(u("mousemove",4)),expect(e._state.dragged).toBe(1),expect(e.getValue()).toEqual([4,4]),e.mousemove(u("mousemove",3)),expect(e._state.dragged).toBe(0),expect(e.getValue()).toEqual([3,4]),e.mouseup(u("mouseup",3)),expect(e._state.dragged).toBeNull(),expect(e.getValue()).toEqual([3,4]),n.keyCode=n.which=39,e.handle1Keydown(n),expect(e._state.keyCtrl).toBeUndefined(),expect(e.getValue()).toEqual([4,4]),e.handle1Keydown(n),expect(e._state.keyCtrl).toBeUndefined(),expect(e.getValue()).toEqual([4,5])}))})),it("Should snap to a tick within tick bounds when using the mouse navigation",(function(){e.setAttribute("range",!0),e.setAttribute("ticks_snap_bounds",.45),e.setAttribute("step",.1),e.refresh();var n=document.createEvent("MouseEvents");t[7]=o[1],n.initMouseEvent.apply(n,t);var u=document.createEvent("MouseEvents");t[7]=o[2]-2,u.initMouseEvent.apply(u,t),e.mousedown(n),expect(e.getValue()).toEqual([.7,5]),e.mousemove(u),expect(e.getValue()).toEqual([2,5]),e.mouseup(u),expect(e.getValue()).toEqual([2,5])})),it("Should trigger change on mouseup",(function(t){var u=0;e.on("slideStop",(function(){expect(u).toBe(1),expect(e.getValue()).toEqual([2,5]),t()})),e.mousedown(n("mousedown",o[1])),expect(e.getValue()).toEqual([1,5]),e.on("change",(function(){u++})),e.mouseup(n("mouseup",o[2]))})),describe("Test 'mousemove' and 'mouseup' produces correct results",(function(){var n,u;it("Last value changed in 'change' event should equal 'mouseup' event value for slider",(function(a){function s(e,n){var u=document.createEvent("MouseEvent");return t[0]=e,t[7]=o[n],u.initMouseEvent.apply(u,t),u}e.setAttribute("value",3),e.setAttribute("range",!1),e.refresh(),n=$("#testSlider1");var l=99;n.on("change",(function(e){l=e.value.newValue})),n.on("slideStop",(function(e){var t=e.value,o=Array.isArray(t)?function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(var o=0;o<e.length;++o)if(e[o]!==t[o])return!1;return!0}(l,t):t===l;expect(o).toBe(!0),a()})),(u=e.$sliderElem.find(".slider-handle:first"))[0].dispatchEvent(s("mousedown",1)),u[0].dispatchEvent(s("mousemove",4)),u[0].dispatchEvent(s("mouseup",4))}))}))}));
//# sourceMappingURL=/sm/281c09b281a33b933f1da1c6767b0598eb3e93a539e01ab13f436db3ba72fbe2.map