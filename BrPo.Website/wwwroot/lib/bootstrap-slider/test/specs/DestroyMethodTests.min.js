/**
 * Minified by jsDelivr using Terser v5.3.0.
 * Original file: /npm/bootstrap-slider@11.0.2/test/specs/DestroyMethodTests.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("'destroy()' Method tests",(function(){var e;function t(){e=new Slider("#testSlider1",{id:"destroyMethodTestSlider"})}it("removes the extra DOM elements associated with a slider",(function(){t(),e.destroy();var n=$("#testSlider1").parent("div.slider").length,o=$("#testSlider1").siblings("div.slider-track, div.tooltip").length;expect(n).toBe(0),expect(o).toBe(0)})),describe("Destroy slider instance associated with <input> element",(function(){var e="temp/bootstrap-slider.js",t="slider";it("Should remove the instance associated with the <input> DOM element",(function(){var e=$("#testSlider1").slider(),n=e.data(t);expect(n).toBeTruthy(),e.slider("destroy"),n=e.data(t),expect(n).toBeUndefined()})),describe("Check alternate namespace",(function(){afterEach((function(t){$.fn.bootstrapSlider=void 0,$.fn.slider=void 0,$.getScript(e,(function(){t()}))})),it("Should remove the instance associated with the <input> DOM element with alternate namespace",(function(t){$.fn.slider=function(){},$.getScript(e,(function(){var e=$("#testSlider1").bootstrapSlider();e.bootstrapSlider("destroy");var n=e.data("bootstrapSlider");expect(n).toBeUndefined(),t()}))}))}))})),describe("unbinds all slider events",(function(){var n,o;beforeEach((function(){t(),n=!1})),it("unbinds from 'slideStart' event",(function(){o="slideStart",$("#destroyMethodTestSlider").on(o,(function(){n=!0})),e.destroy(),$("#destroyMethodTestSlider").trigger(o),expect(n).toBeFalsy()})),it("unbinds from 'slide' event",(function(){o="slide",$("#destroyMethodTestSlider").on(o,(function(){n=!0})),e.destroy(),$("#destroyMethodTestSlider").trigger(o),expect(n).toBeFalsy()})),it("unbinds from 'slideStop' event",(function(){o="slideStop",$("#destroyMethodTestSlider").on(o,(function(){n=!0})),e.destroy(),$("#destroyMethodTestSlider").trigger(o),expect(n).toBeFalsy()})),it("unbinds from 'slideChange' event",(function(){o="slideChange",$("#destroyMethodTestSlider").on(o,(function(){n=!0})),e.destroy(),$("#destroyMethodTestSlider").trigger(o),expect(n).toBeFalsy()})),it("unbinds all slider events and allows you to re-create the slider without runtime error",(function(){var t=function(){$("#testSlider1").bootstrapSlider({min:0,max:1e6,step:1e3}),(e=$("#testSlider1").data("bootstrapSlider")).on("slideStop",(function(){}))};e.destroy(),t(),e.destroy();var n=!1;try{t()}catch(e){n=!0}e.destroy(),expect(n).toBeFalsy()}))})),describe("DOM event listener removal tests",(function(){describe("When tooltips are always hidden for single value sliders",(function(){beforeEach((function(){e=new Slider("#testSlider1",{id:"destroyMethodTestSlider",tooltip:"hide"})})),it("does not try to remove 'focus' event listener from handle1",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("focus",void 0,!1)})),it("does not try to remove 'blur' event listener from handle1",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("blur",void 0,!1)})),it("does not try to remove 'mouseenter' event listener from slider",(function(){spyOn(e.sliderElem,"removeEventListener"),e.destroy(),expect(e.sliderElem.removeEventListener).not.toHaveBeenCalledWith("mouseenter",void 0,!1)})),it("does not try to remove 'mouseleave' event listener from slider",(function(){spyOn(e.sliderElem,"removeEventListener"),e.destroy(),expect(e.sliderElem.removeEventListener).not.toHaveBeenCalledWith("mouseleave",void 0,!1)}))})),describe("When tooltips are always shown for single value sliders",(function(){beforeEach((function(){e=new Slider("#testSlider1",{id:"destroyMethodTestSlider",tooltip:"always"})})),it("does not try to remove 'focus' event listener from handle1 when tooltip is always shown for single handle sliders",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("focus",void 0,!1)})),it("does not try to remove 'blur' event listener from handle1 when tooltip is always shown for single handle sliders",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("blur",void 0,!1)})),it("does not try to remove 'mouseenter' event listener from slider is always shown for single handle slider",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("mouseenter",void 0,!1)})),it("does not try to remove 'mouseleave' event listener from slider is always shown for single handle slider",(function(){spyOn(e.sliderElem,"removeEventListener"),e.destroy(),expect(e.sliderElem.removeEventListener).not.toHaveBeenCalledWith("mouseleave",void 0,!1)}))})),describe("When tooltips are always hidden for range sliders",(function(){beforeEach((function(){e=new Slider("#testSlider1",{id:"destroyMethodTestSlider",tooltip:"always",value:[2,5]})})),it("does not try to remove 'focus' event listener from handle1",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("focus",void 0,!1)})),it("does not try to remove 'focus' event listener from handle2",(function(){spyOn(e.handle2,"removeEventListener"),e.destroy(),expect(e.handle2.removeEventListener).not.toHaveBeenCalledWith("focus",void 0,!1)})),it("does not try to remove 'blur' event listener from handle1",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("blur",void 0,!1)})),it("does not try to remove 'blur' event listener from handle2",(function(){spyOn(e.handle2,"removeEventListener"),e.destroy(),expect(e.handle2.removeEventListener).not.toHaveBeenCalledWith("blur",void 0,!1)})),it("does not try to remove 'mouseenter' event listener from slider",(function(){spyOn(e.sliderElem,"removeEventListener"),e.destroy(),expect(e.sliderElem.removeEventListener).not.toHaveBeenCalledWith("mouseenter",void 0,!1)})),it("does not try to remove 'mouseleave' event listener from slider",(function(){spyOn(e.sliderElem,"removeEventListener"),e.destroy(),expect(e.sliderElem.removeEventListener).not.toHaveBeenCalledWith("mouseleave",void 0,!1)}))})),describe("When tooltips are always shown for range sliders",(function(){beforeEach((function(){e=new Slider("#testSlider1",{id:"destroyMethodTestSlider",tooltip:"always",value:[2,5]})})),it("does not try to remove 'focus' event listener from handle1",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("focus",void 0,!1)})),it("does not try to remove 'focus' event listener from handle2",(function(){spyOn(e.handle2,"removeEventListener"),e.destroy(),expect(e.handle2.removeEventListener).not.toHaveBeenCalledWith("focus",void 0,!1)})),it("does not try to remove 'blur' event listener from handle1",(function(){spyOn(e.handle1,"removeEventListener"),e.destroy(),expect(e.handle1.removeEventListener).not.toHaveBeenCalledWith("blur",void 0,!1)})),it("does not try to remove 'blur' event listener from handle1 and handle2",(function(){spyOn(e.handle2,"removeEventListener"),e.destroy(),expect(e.handle2.removeEventListener).not.toHaveBeenCalledWith("blur",void 0,!1)})),it("does not try to remove 'mouseenter' event listener from slider",(function(){spyOn(e.sliderElem,"removeEventListener"),e.destroy(),expect(e.sliderElem.removeEventListener).not.toHaveBeenCalledWith("mouseenter",void 0,!1)})),it("does not try to remove 'mouseleave' event listener from slider",(function(){spyOn(e.sliderElem,"removeEventListener"),e.destroy(),expect(e.sliderElem.removeEventListener).not.toHaveBeenCalledWith("mouseleave",void 0,!1)}))}))}))}));
//# sourceMappingURL=/sm/08057171fcd5632ccd542427f539a662945cec1d1c39d4e3378c91f38c9213d5.map