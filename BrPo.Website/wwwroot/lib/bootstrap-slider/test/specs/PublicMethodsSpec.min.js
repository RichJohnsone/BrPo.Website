/**
 * Minified by jsDelivr using Terser v5.3.0.
 * Original file: /npm/bootstrap-slider@11.0.2/test/specs/PublicMethodsSpec.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("Public Method Tests",(function(){var e;describe("slider constructor",(function(){describe("returns a jQuery object if it is called on a jQuery object with zero or more matching elements",(function(){it("returns a jQuery object if it is called on with no matching elements",(function(){e=$(),expect(e.slider()instanceof jQuery).toBe(!0)})),it("returns a jQuery object if it is called on with one matching element",(function(){e=$("#testSlider1"),expect(e.slider()instanceof jQuery).toBe(!0)})),it("returns a jQuery object if it is called on with multiple matching elements",(function(){e=$("#testSlider1, #testSlider2"),expect(e.slider()instanceof jQuery).toBe(!0)}))})),it("reads and sets the 'id' attribute of the slider instance that is created",(function(){var t="mySlider";e=$("#testSlider1").slider({id:t});var i=$("#testSlider1").siblings("div.slider").is("#mySlider");expect(i).toBeTruthy()})),it("generates multiple slider instances from selector",(function(){$(".makeSlider").slider();var e=$(".makeSlider").siblings().is(".slider");expect(e).toBeTruthy();var t=$(".makeSlider").siblings(".slider").length;expect(t).toEqual(2),$(".makeSlider").slider("destroy")})),it("reads and sets the 'min' option properly",(function(){(e=$("#testSlider1").slider({min:-5})).slider("setValue",-5);var t=e.slider("getValue");expect(t).toBe(-5)})),it("reads and sets the 'max' option properly",(function(){(e=$("#testSlider1").slider({max:15})).slider("setValue",15);var t=e.slider("getValue");expect(t).toBe(15)})),it("reads and sets the 'precision' option properly",(function(){(e=$("#testSlider1").slider({precision:2})).slider("setValue",8.115);var t=e.slider("getValue");expect(t).toBe(8.12)})),it("reads and sets the 'orientation' option properly",(function(){e=$("#testSlider1").slider({orientation:"vertical"});var t=$("#testSlider1").siblings("div.slider").hasClass("slider-vertical");expect(t).toBeTruthy()})),it("reads and sets the 'value' option properly",(function(){(e=$("#testSlider1").slider({value:8})).slider("setValue",8);var t=e.slider("getValue");expect(t).toBe(8)})),it("reads and sets the 'selection' option properly",(function(){(e=$("#testSlider1").slider({selection:"after"})).slider("setValue",10);var t=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-selection").width();expect(t).toBe(0)})),it("updates the 'selection' option properly",(function(){(e=$("#testSlider1").slider({selection:"none"})).slider("setValue",10),e.slider("refresh");var t=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-track-low").hasClass("hide");expect(t).toBe(!0);var i=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-selection").hasClass("hide");expect(i).toBe(!0);var s=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-track-high").hasClass("hide");expect(s).toBe(!0);e.slider("setAttribute","selection","after"),e.slider("refresh");var r=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-track-low").hasClass("hide");expect(r).toBe(!1);var l=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-selection").hasClass("hide");expect(l).toBe(!1);var n=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-track-high").hasClass("hide");expect(n).toBe(!1)})),it("reads and sets the 'handle' option properly",(function(){e=$("#testSlider1").slider({handle:"triangle"});var t=$("#testSlider1").siblings(".slider").children("div.slider-handle").hasClass("triangle");expect(t).toBeTruthy()})),it("reads and sets the 'reversed' option properly",(function(){(e=$("#testSlider1").slider({reversed:!0})).slider("setValue",10);var t=$("#testSlider1").siblings(".slider").children("div.slider-track").children("div.slider-selection").width();expect(t).toBe(0)})),it("reads and sets the 'formatter' option properly",(function(){var t=function(e){return"Current value: "+e};(e=$("#testSlider1").slider({formatter:t})).slider("setValue",9);var i=$("#testSlider1").siblings(".slider").find("div.tooltip").children("div.tooltip-inner").text(),s=t(9);expect(i).toBe(s)})),it("reads and sets the 'enabled' option properly",(function(){var t=(e=$("#testSlider1").slider({enabled:!1})).slider("isEnabled");expect(t).not.toBeTruthy()})),describe("reads and sets the 'tooltip' option properly",(function(){it("tooltip is not shown if set to 'hide'",(function(){var t=(e=$("#testSlider1").slider({tooltip:"hide"})).siblings(".slider").children("div.tooltip").hasClass("hide");expect(t).toBeTruthy()})),it("tooltip is shown during sliding if set to 'show'",(function(){e=$("#testSlider1").slider({tooltip:"show"});var t=!$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(t).toBeTruthy();var i=document.createEvent("Events");i.initEvent("mouseenter",!0,!0),e.data("slider").sliderElem.dispatchEvent(i);var s=$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(s).toBeTruthy()})),it("tooltip is shown on mouse over and hides correctly after mouse leave",(function(){e=$("#testSlider1").slider({tooltip:"show"});var t=!$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(t).toBeTruthy();var i=document.createEvent("Events");i.initEvent("mouseenter",!0,!0),e.data("slider").sliderElem.dispatchEvent(i);var s=$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(s).toBeTruthy();var r=document.createEvent("Events");r.initEvent("mouseleave",!0,!0),e.data("slider").sliderElem.dispatchEvent(r);var l=!$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(l).toBeTruthy()})),it("tooltip is always shown if set to 'always'",(function(){e=$("#testSlider1").slider({tooltip:"always"});var t=$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(t).toBeTruthy()})),it("defaults to 'show' option if invalid value is passed",(function(){e=$("#testSlider1").slider({tooltip:"invalid option value"});var t=!$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(t).toBeTruthy();var i=document.createEvent("Events");i.initEvent("mouseenter",!0,!0),e.data("slider").sliderElem.dispatchEvent(i);var s=$("#testSlider1").siblings(".slider").children("div.tooltip").hasClass("show");expect(s).toBeTruthy()}))}))})),describe("'setValue()' tests",(function(){var t=function(e){return"Invalid input value '"+e+"' passed in"};describe("if slider is a single value slider",(function(){beforeEach((function(){e=$("#testSlider1").slider()})),it("properly sets the value of the slider when given a numeric value",(function(){e.slider("setValue",5);var t=e.slider("getValue");expect(t).toBe(5)})),it("properly sets the value of the slider when given a string value",(function(){e.slider("setValue","5");var t=e.slider("getValue");expect(t).toBe(5)})),it("if a value passed in is greater than the max (10), the slider only goes to the max",(function(){e.slider("setValue",15);var t=e.slider("getValue");expect(t).toBe(10)})),it("if a value passed in is less than the min (0), the slider only goes to the min",(function(){e.slider("setValue",-5);var t=e.slider("getValue");expect(t).toBe(0)})),it("sets the 'value' property of the slider <input> element",(function(){e.slider("setValue",9);var t=document.querySelector("#testSlider1").value;t=parseFloat(t),expect(t).toBe(9)})),it("sets the 'value' attribute of the slider <input> element",(function(){e.slider("setValue",9);var t=document.querySelector("#testSlider1").getAttribute("value");t=parseFloat(t),expect(t).toBe(9)})),describe("when an invalid value type is passed in",(function(){var i;beforeEach((function(){i="a"})),it("throws an error and does not alter the slider value",(function(){var s=e.slider("getValue");expect((function(){e.slider("setValue",i)})).toThrow(new Error(t(i)));var r=e.slider("getValue");expect(r).toBe(s)}))}))})),describe("if slider is a range slider",(function(){beforeEach((function(){e=$("#testSlider1").slider({value:[3,8]})})),it("properly sets the values if both within the max and min",(function(){var t=[5,7];e.slider("setValue",t);var i=e.slider("getValue");expect(i[0]).toBe(t[0]),expect(i[1]).toBe(t[1])})),describe("caps values to the min if they are set to be less than the min",(function(){it("first value is capped to min",(function(){e.slider("setValue",[-5,7]);var t=e.slider("getValue");expect(t[0]).toBe(0)})),it("second value is capped to min",(function(){e.slider("setValue",[7,-5]);var t=e.slider("getValue");expect(t[1]).toBe(0)}))})),describe("caps values to the max if they are set to be higher than the max",(function(){it("first value is capped to max",(function(){e.slider("setValue",[15,7]);var t=e.slider("getValue");expect(t[0]).toBe(10)})),it("second value is capped to max",(function(){e.slider("setValue",[7,15]);var t=e.slider("getValue");expect(t[1]).toBe(10)}))})),describe("if either value is of invalid type",(function(){var i="a";it("first value is of invalid type",(function(){expect((function(){e.slider("setValue",[i,7])})).toThrow(new Error(t(i)))})),it("second value is of invalid type",(function(){expect((function(){e.slider("setValue",[7,i])})).toThrow(new Error(t(i)))}))}))})),describe("triggerSlideEvent argument",(function(){it("if triggerSlideEvent argument is true, the 'slide' event is triggered",(function(){var e=$("#testSlider1").slider({value:3});e.on("slide",(function(e){expect(5).toEqual(e.value)})),e.slider("setValue",5,!0)})),it("if triggerSlideEvent argument is false, the 'slide' event is not triggered",(function(){var e=!1,t=$("#testSlider1").slider({value:3});t.on("slide",(function(){e=!0})),t.slider("setValue",5,!1),expect(e).toEqual(!1)}))})),describe("triggerChangeEvent argument",(function(){it("if triggerChangeEvent argument is true, the 'change' event is triggered",(function(){var e=$("#testSlider1").slider({value:3});e.on("change",(function(e){expect(5).toEqual(e.value.newValue)})),e.slider("setValue",5,!0)})),it("if triggerChangeEvent argument is false, the 'change' event is not triggered",(function(){var e=!1,t=$("#testSlider1").slider({value:3});t.on("change",(function(){e=!0})),t.slider("setValue",5,!1),expect(e).toEqual(!1)}))}))})),describe("'getValue()' tests",(function(){it("returns the current value of the slider",(function(){(e=$("#testSlider1").slider()).slider("setValue",5);var t=e.slider("getValue");expect(t).toBe(5)}))})),describe("'enable()' tests",(function(){it("correctly enables a slider",(function(){(e=$("#testSlider1").slider({enabled:!1})).slider("enable");var t=e.slider("isEnabled");expect(t).toBeTruthy()}))})),describe("'disable()' tests",(function(){it("correctly disable a slider",(function(){(e=$("#testSlider1").slider()).slider("disable");var t=e.slider("isEnabled");expect(t).not.toBeTruthy()}))})),describe("'toggle()' tests",(function(){it("correctly enables a disabled slider",(function(){(e=$("#testSlider1").slider({enabled:!1})).slider("toggle");var t=e.slider("isEnabled");expect(t).toBeTruthy()})),it("correctly disables an enabled slider",(function(){(e=$("#testSlider1").slider()).slider("toggle");var t=e.slider("isEnabled");expect(t).not.toBeTruthy()}))})),describe("'isEnabled()' tests",(function(){it("returns true for an enabled slider",(function(){var t=(e=$("#testSlider1").slider({id:"enabled",enabled:!0})).slider("isEnabled"),i=e.siblings("#enabled"),s=i.hasClass("slider")&&i.hasClass("#enabled");expect(t).toBeTruthy(),expect(s).not.toBeTruthy()})),it("returns false for a disabled slider",(function(){var t=(e=$("#testSlider1").slider({id:"disabled",enabled:!1})).slider("isEnabled"),i=e.siblings("#disabled"),s=i.hasClass("slider")&&i.hasClass("slider-disabled");expect(t).not.toBeTruthy(),expect(s).toBeTruthy()}))})),it("get attribute",(function(){var t=(e=$("#testSlider1").slider()).slider("getAttribute","max");expect(t).toBe(10)})),it("changes slider from basic to range",(function(){(e=$("#makeRangeSlider").slider()).slider("setAttribute","range",!0).slider("refresh");var t=$("#changeOrientationSlider").parent("div.slider").find(".slider-handle").last().hasClass("hide");expect(t).toBeFalsy()})),it("setAttribute: changes the 'data-slider-orientation' property from horizontal to vertical",(function(){(e=$("#changeOrientationSlider").slider({id:"changeOrientationSliderElem"})).slider("setAttribute","orientation","vertical").slider("refresh");var t=$("#changeOrientationSliderElem").hasClass("slider-vertical");expect(t).toBeTruthy()})),it("relayout: if slider is not displayed on initialization and then displayed later on, relayout() will not adjust the margin-left of the tooltip",(function(){e=new Slider("#relayoutSliderInput",{id:"relayoutSlider",min:0,max:10,value:5});var t,i=document.querySelector("#relayoutSlider .tooltip-main"),s=document.querySelector("#relayoutSliderContainer");t=parseFloat(i.style.marginLeft),expect(t).toBeNaN(),s.style.display="block",e.relayout(),t=Math.abs(parseFloat(i.style.marginLeft)),expect(t).toBeNaN()})),it("relayout: if slider is not displayed on initialization and then displayed later on, relayout() will re-adjust the tick label width",(function(){e=new Slider("#relayoutSliderInputTickLabels",{id:"relayoutSliderTickLabels",min:0,max:10,ticks:[0,5,10],ticks_labels:["low","mid","high"],value:5});var t,i,s=$("#relayoutSliderTickLabels").find(".slider-tick-label");for(t=0;t<s.length;t++)i=$(s[t]),expect(parseInt(i.css("width"))).toBe(0);for($("#relayoutSliderContainerTickLabels").css("display","block"),e.relayout(),$("#relayoutSliderContainerTickLabels").css("display","none"),t=0;t<s.length;t++)i=$(s[t]),expect(parseInt(i.css("width"))).toBeGreaterThan(0)})),afterEach((function(){e&&(e instanceof jQuery&&e.slider("destroy"),e instanceof Slider&&e.destroy(),e=null)}))}));
//# sourceMappingURL=/sm/7451e02b18a093710d5aab8866da047daac8389f0ccf62a7ebe0f5f8b7cac2a9.map