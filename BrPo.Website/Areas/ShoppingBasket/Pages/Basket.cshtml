@page
@model BrPo.Website.Areas.ShoppingBasket.Pages.BasketModel

<style>
    .hidden {
        display: none;
    }
</style>

<div class="row">
    <h2>Shopping Basket</h2>
</div>

<div class="row">
    <div id="basketItemsContainer"></div>
    @Html.AntiForgeryToken()
</div>

<div class="row">
    <div class="w-100">
        <button class="btn btn-primary btn-lg btn-block" 
                id="checkoutButton">
            Complete Order
        </button>
    </div>
</div>

<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content p-3">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Proceed to Payment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <h4 class="ml-3">Your order total is : £ <span id="orderTotal"></span></h4>
                </div>       
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="proceedToPaymentButton" class="btn btn-primary">Proceed to Payment</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="spinnerModal">
    <div class="modal-dialog modal-dialog-centered text-center" role="document">
        <span class="fa fa-spinner fa-spin fa-3x w-100"></span>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {

        // load basket table functions
        function loadBasketItems(){
            try {
                $("#basketItemsContainer").load(`Basket?handler=BasketItemsPartial`, function(){
                    bindTooltips();
                    setIntegerControls();
                    setQuantityControls();
                    setDeleteButtons();
                    getBasketTotals();
                });
            }
            catch(e) {
                console.log(`Error from loadBasketItems: ${e.name} : ${e.description} : ${e.message}` );
            }
        }

        function getBasketTotals(){
            try {
                $("#basketSubTotal").load(`Basket?handler=BasketTotal`, function(){
                    doVoucherDiscount();
                    getDeliveryCost();
                    getTotal();
                });
            }
            catch(e) {
                console.log(`Error from getBasketTotal: ${e.name} : ${e.description} : ${e.message}` );
            }
        }

        function doVoucherDiscount(){
            try {
                $("#voucherDiscount").html("0.00");
            }
            catch(e) {
                console.log(`Error from doVoucherDiscount: ${e.name} : ${e.description} : ${e.message}` );
            }
        }

        function getDeliveryCost(){
            try {
                $("#deliveryTotal").html("5.00");
            }
            catch(e) {
                console.log(`Error from getDeliveryCost: ${e.name} : ${e.description} : ${e.message}` );
            }
        }

        function getTotal(){
            try {
                let total = (parseFloat($("#basketSubTotal").html()) - parseFloat($("#voucherDiscount").html()) + parseFloat($("#deliveryTotal").html())).toFixed(2);
                $("#basketTotal").html(total);
            }
            catch(e) {
                console.log(`Error from getTotal: ${e.name} : ${e.description} : ${e.message}` );
            }
        }

        function roundToInteger(input){
            return Math.round(input); 
        }
        
        function setIntegerControls(){
            $(".integer-control-js").on('mouseup blur change input', function(){
                $(this).val(roundToInteger($(this).val()));
            });      
        }

        // quantity functions

        function setQuantityControls(){
            $(".quantity-controls-js").on('mouseup', function(){
                let id = $(this).attr("data-id");
                let value = $(this).val();
                doQuantityChange(id, value);
            });      
        }

        function doQuantityChange(id, value){
            let url = `Basket?handler=QuantityChange&basketItemId=${id}&newQuantity=${value}`;
            $.ajax({
                url: url,
                type: 'POST',
                headers: {
                    "XSRF-TOKEN": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                processData: false,
                success: function (response) {
                    loadBasketItems();
                },
                error: function (response, status, error) {
                    alert(`Error response from server:\n\n${response.responseText}\n\n${status}\n\n${error}`);
                }
            });
        }

        // delete functions

        function setDeleteButtons(){
            $(".delete-from-basket-js").on('mouseup', function() {
                let id = $(this).attr("data-id");
                doDeleteBasketItem(id);
            });
        }

        function doDeleteBasketItem(id){
            let url = `Basket?handler=DeleteItem&basketItemId=${id}`;
            $.ajax({
                url: url,
                type: 'POST',
                headers: {
                    "XSRF-TOKEN": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                processData: false,
                success: function (response) {
                    loadBasketItems();
                },
                error: function (response, status, error) {
                    alert(`Error response from server:\n\n${response.responseText}\n\n${status}\n\n${error}`);
                }
            });
        }

        // confirmation functions

        $('#checkoutButton').click(function (e) {
            loadConfirmModal()
        });

        function loadConfirmModal(){
            $("#orderTotal").html($("#basketTotal").html());
            if (parseFloat($("#orderTotal").html) == 0){
                alert("basket is empty!");
                return;
            }
            $('#confirmModal').modal('show');
        }

        $('#proceedToPaymentButton').click(async function (e) {
            e.preventDefault();
            $("#checkoutButton").hide();
            $('#confirmModal').modal('hide');
            proceedToPayment();
        });

        function proceedToPayment(){
            let url = `Basket?handler=GoToPayment`;
            $.ajax({
                url: url,
                type: 'POST',
                headers: {
                    "XSRF-TOKEN": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                processData: false,
                success: function (response) {
                    $('#spinnerModal').modal('show');
                    window.location.href = response;
                },
                error: function (response, status, error) {
                    alert(`Error response from server:\n\n${response.responseText}\n\n${status}\n\n${error}`);
                }
            });        
        }

        // initialisation

        loadBasketItems();
    });
</script>