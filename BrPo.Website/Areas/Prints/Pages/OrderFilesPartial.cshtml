@using BrPo.Website.Services.Image.Models
@using BrPo.Website.Services.Image.Services
@model List<ImageFileModel> 
@inject IImageService ImageService

@foreach( var imageFile in Model)
{
    <div class="mb-3">
        <div class="row">
            <div class="col">
                <a title="click the image to select it">
                    <img class="uploadImage" 
                            src="data:image/png;base64,@await ImageService.GetBase64ThumbnailAsync(imageFile.Id, 100)"
                            data-id="@imageFile.Id",
                            data-fileName="@imageFile.OriginalFileName"
                            data-pixel-height="@imageFile.Height"
                            data-pixel-width="@imageFile.Width">
                </a>
            </div>
            <div class="col table-responsive-sm">
                <table class="table-sm">
                    <tr><th>File Name</th><td>@imageFile.OriginalFileName</td></tr>
                    <tr><th>Dimensions</th><td><span title="Height in pixels"> @imageFile.Height</span> * <span title="Width in pixels"> @imageFile.Width</span></td></tr>
                    @if (!string.IsNullOrEmpty(imageFile.ColourSpace)) {
                        <tr><th>Colour Space</th><td>@imageFile.ColourSpace</td></tr>
                    }
                    @if (imageFile.ImageCreatedDate != null) {
                        <tr><th>Created Date</th><td>@imageFile.ImageCreatedDate.ToString()</td></tr>
                    }
                    @if (imageFile.Orientation != null) {
                        <tr><th>Orientation</th><td>@imageFile.Orientation</td></tr>
                    }                </table>
            </div>
        </div>
    </div>
}